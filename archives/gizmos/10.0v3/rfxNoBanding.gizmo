#! /usr/local/Nuke5.2v2/Nuke5.2 -nx
version 5.2200
Gizmo {
 help "Adds synthetic grain. Push \"presets\" to get predefined types of grain, these are the correct size for 2K scans.\n\nYou can also adjust the sliders to match a sample piece of grain. Find a sample with a rather constant background, blur it to remove the grain, and use as input to this. View with a wipe in the viewer so you can make a match. It helps to view and match each of the red, green, blue seperately."
 tile_color 0x992620ff
 addUserKnob {20 master_control l Master}
 addUserKnob {7 noise_intensity_global l Intensity R 0 2}
 noise_intensity_global 1
 addUserKnob {7 rgb_size_multiplier l Size R 0 2}
 rgb_size_multiplier 1
 addUserKnob {26 ""}
 addUserKnob {6 no_alpha l "no alpha?" t "Check this box if your image doesn't have an alpha and you cannot use another alpha channel.\n\n(Note: This WILL cause the grain to be more prevalent. So please compensate using the Noise Size and Noise Intensity controls above.)" +STARTLINE}
 addUserKnob {20 adv_controls l Advanced}
 addUserKnob {20 fractal_noise_size l "RGB Noise Size" n 1}
 fractal_noise_size 0
 addUserKnob {14 red_size l r R 0 100}
 red_size 1.7
 addUserKnob {14 green_size l g R 0 100}
 green_size 1.6
 addUserKnob {14 blue_size l b R 0 100}
 blue_size 1.5
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 noise_irregularity l "RGB Noise Irregularity" n 1}
 noise_irregularity 0
 addUserKnob {7 red_i l r}
 red_i 1
 addUserKnob {7 green_i l g}
 green_i 0.75
 addUserKnob {7 blue_i l b}
 blue_i 0.65
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 noise_intensity l "RGB Noise Intensity" n 1}
 noise_intensity 0
 addUserKnob {7 red_m l r t "Amount of grain to add to a white pixel"}
 red_m 0.2
 addUserKnob {7 green_m l g}
 green_m 0.4
 addUserKnob {7 blue_m l b}
 blue_m 0.6
 addUserKnob {18 black t "Amount of grain to add everywhere"}
 addUserKnob {18 minimum t "Minimum black level" R 0 0.01}
 minimum {0 0 0}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {3 seed l Seed}
 seed 134
 addUserKnob {32 reset l Reset T "knobs this \{rgb_size_multiplier 0 red_size 1.70 green_size 1.60 blue_size 1.50 red_i 1.00 green_i 0.75 blue_i 0.65 red_m 0.40 green_m 0.60 blue_m 1.65 black 0.00\}" +STARTLINE}
}
 Input {
  inputs 0
  name Input1
  xpos 0
 }
set N581118a0 [stack 0]
 Noise {
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  cliptype none
  replace true
  size {{parent.red_size.w*(rgb_size_multiplier) i} {parent.red_size.h*(rgb_size_multiplier) i}}
  octaves 2
  gamma 1
  xrotate {{red_i*45 i}}
  yrotate {{red_i*45 i}}
  name red
  xpos 144
  ypos -7
 }
 Noise {
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  cliptype none
  replace true
  size {{parent.green_size.w*(rgb_size_multiplier) i} {parent.green_size.h*(rgb_size_multiplier) i}}
  zoffset 10
  octaves 2
  gamma 1
  xrotate {{green_i*45 i}}
  yrotate {{green_i*45 i}}
  name green
  xpos 144
  ypos 35
 }
 Noise {
  output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  cliptype none
  replace true
  size {{parent.blue_size.w*(rgb_size_multiplier) i} {parent.blue_size.h*(rgb_size_multiplier) i}}
  zoffset 20
  octaves 2
  gamma 1
  xrotate {{blue_i*45 i}}
  yrotate {{blue_i*45 i}}
  name blue
  xpos 144
  ypos 77
 }
push $N581118a0
 MergeExpression {
  inputs 2
  expr0 max(minimum.r,r+(2*Ar-1)*(r*red_m*noise_intensity_global))
  expr1 max(minimum.g,g+(2*Ag-1)*(g*green_m*noise_intensity_global))
  expr2 max(minimum.b,b+(2*Ab-1)*(b*blue_m*noise_intensity_global))
  name MergeExpression1
  xpos 144
  ypos 119
 }
set N5b586aa0 [stack 0]
push $N5b586aa0
push $N581118a0
 Copy {
  inputs 2
  channels rgb
  maskChannelInput rgba.alpha
  name Copy1
  xpos 0
  ypos 105
  disable {{parent.no_alpha i}}
 }
 Switch {
  inputs 2
  which {{parent.no_alpha i}}
  name Switch1
  xpos 144
  ypos 172
 }
 Output {
  name Output1
  xpos 144
  ypos 219
 }
end_group
