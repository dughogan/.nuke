#! /usr/local/Nuke8.0v5/libnuke-8.0.v5.so -nx
version 8.0 v5
Group {
 name rfxRimLight
 inputs 3
 tile_color 0xdda230ff
 addUserKnob {20 User l create}
 addUserKnob {4 rimlight_type l Choose: M {point directional spot "" "" "" "" "" "" ""}}
 rimlight_type directional
 addUserKnob {22 rimlight_add l "Create Rim Light" -STARTLINE T "#Variables to store\nself = nuke.thisNode()\nsrcNode = nuke.toNode('LightHub')\ncount = nuke.toNode('LightHub').inputs()\ntabCount = nuke.toNode('LightHub').inputs()+1\nrimtype = nuke.thisNode().knob('rimlight_type').value()\ntypename = nuke.thisNode().knob('rimlight_type').value()\n\n#Make the light and set expressions\nmklight = nuke.nodes.Light2()\nmklight\['light_type'].setValue('%s' % rimtype)\nmklight\['translate'].setExpression('parent.rimlight%s_trans_x' % count,0)\nmklight\['translate'].setExpression('parent.rimlight%s_trans_y' % count,1)\nmklight\['translate'].setExpression('parent.rimlight%s_trans_z' % count,2)\nmklight\['rotate'].setExpression('parent.rimlight%s_rotate_x' % count,0)\nmklight\['rotate'].setExpression('parent.rimlight%s_rotate_y' % count,1)\nmklight\['color'].setExpression('parent.rimlight%s_color' % count)\nmklight\['color'].setValue(2, 1)\nmklight\['cone_angle'].setValue(180)\nmklight\['name'].setValue('rimlight%s' % count)\nmklight\['intensity'].setExpression('parent.rimlight%s_intensity' % count)\n\n#Make the light knobs\ntx = nuke.Double_Knob('rimlight%s_trans_x' % count, 'translate x')\ntx.setRange(-5000,5000)\nty = nuke.Double_Knob('rimlight%s_trans_y' % count, 'translate y')\nty.setRange(-5000,5000)\ntz = nuke.Double_Knob('rimlight%s_trans_z' % count, 'translate z')\ntz.setRange(-5000,5000)\nrx = nuke.Double_Knob('rimlight%s_rotate_x' % count, 'rotate x')\nrx.setRange(-360,360)\nry = nuke.Double_Knob('rimlight%s_rotate_y' % count, 'rotate y')\nry.setRange(-360,360)\nrc = nuke.Color_Knob('rimlight%s_color' % count, 'color')\nri = nuke.Double_Knob('rimlight%s_intensity' % count, 'intensity')\nri.setRange(0,100)\nrtab = nuke.Tab_Knob('rimlight%s_tab' % count, '%s light %s' % (typename, tabCount))\ndiv = nuke.Text_Knob(\"rimlight%s_divider\" % count,\"\",\"\")\ndiv2 = nuke.Text_Knob(\"rimlight%s_divider\" % count,\"\",\"\")\ndiv3 = nuke.Text_Knob(\"rimlight%s_divider\" % count,\"\",\"\")\n\n#Setup Remove Buttons\nprmb = nuke.PyScript_Knob('rimlight%s_remove' % count, 'remove light')\nprmb.setValue('nuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (prmb.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (tx.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ty.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (tz.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (div2.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rc.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ri.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rtab.name()) + '\\'])\\nnuke.delete(nuke.toNode(\\'' + mklight.name() + '\\'))')\n\ndrmb = nuke.PyScript_Knob('rimlight%s_remove' % count, 'remove light')\ndrmb.setValue('nuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (drmb.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rx.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ry.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (div.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (div3.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rc.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ri.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rtab.name()) + '\\'])\\nnuke.delete(nuke.toNode(\\'' + mklight.name() + '\\'))')\n\nsrmb = nuke.PyScript_Knob('rimlight%s_remove' % count, 'remove light')\nsrmb.setValue('nuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (srmb.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rx.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (tx.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ty.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (tz.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ry.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (div2.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (div3.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rc.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (ri.name()) + '\\'])\\nnuke.thisNode().removeKnob(nuke.thisNode().knobs()\[\\'' + (rtab.name()) + '\\'])\\nnuke.delete(nuke.toNode(\\'' + mklight.name() + '\\'))')\n\n\n#Create knobs based on light type\nif (rimtype) == 'point':\n\n  #Create the point light knobs\n  self.addKnob(rtab)\n  self.addKnob(prmb)\n  self.addKnob(div)\n  self.addKnob(tx)\n  self.addKnob(ty)\n  self.addKnob(tz)\n  self.addKnob(div2)\n  self.addKnob(rc)\n  self\['rimlight%s_color' % count].setValue(1)\n  self.addKnob(ri)\n  self\['rimlight%s_intensity' % count].setValue(10)\n  \nif (rimtype) == 'directional':\n\n  #Create the directional light knobs\n  self.addKnob(rtab)\n  self.addKnob(drmb)\n  self.addKnob(div)\n  self.addKnob(rx)\n  self.addKnob(ry)\n  self.addKnob(div3)\n  self.addKnob(rc)\n  self\['rimlight%s_color' % count].setValue(1)\n  self.addKnob(ri)\n  self\['rimlight%s_intensity' % count].setValue(10)\n  \nif (rimtype) == 'spot':\n\n  #Create the spotlight knobs\n  self.addKnob(rtab)\n  self.addKnob(srmb)\n  self.addKnob(div)\n  self.addKnob(tx)\n  self.addKnob(ty)\n  self.addKnob(tz)\n  self.addKnob(div2)\n  self.addKnob(rx)\n  self.addKnob(ry)\n  self.addKnob(div3)  \n  self.addKnob(rc)\n  self\['rimlight%s_color' % count].setValue(1)\n  self.addKnob(ri)\n  self\['rimlight%s_intensity' % count].setValue(10)\n\n#Hook up the new light to the LightHub\nsrcNode.setInput(count,mklight)"}
 addUserKnob {26 ""}
 addUserKnob {6 use_diffuse_option l "Use Diffuse Color" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {20 edge_light l "Edge Light" n 1}
 edge_light 0
 addUserKnob {6 edge_disable l "enable edge light" +STARTLINE}
 addUserKnob {6 edge_light_only l "output edge ONLY" -STARTLINE}
 addUserKnob {41 multiply l intensity T Grade1.multiply}
 addUserKnob {41 size l softness T Blur1.size}
 addUserKnob {26 ""}
 addUserKnob {6 rimlight_edge_mask_disable l "enable edge mask" +STARTLINE}
 addUserKnob {41 Achannels_1 l "select mask" T Merge7.Achannels}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 mask_group l Masking n 1}
 mask_group 0
 addUserKnob {26 ""}
 addUserKnob {6 rimlight_core_disable l "enable core" +STARTLINE}
 addUserKnob {41 size_2 l size T Dilate1.size}
 addUserKnob {41 size_1 l softness T Blur2.size}
 addUserKnob {26 ""}
 addUserKnob {6 mask_enable l "enable mask" +STARTLINE}
 addUserKnob {41 Achannels l "select mask" T Merge6.Achannels}
 addUserKnob {20 endGroup_1 l endGroup n -1}
}
 BackdropNode {
  inputs 0
  name Unnormalize1
  tile_color 0x44444401
  gl_color 0x44444401
  label "Unnormalize Normals"
  note_font "Arial Black"
  note_font_size 20
  xpos 681
  ypos -988
  bdwidth 225
  bdheight 194
 }
 Input {
  inputs 0
  name Masking
  tile_color 0xff00ff
  xpos -470
  ypos -728
  number 2
 }
 Dot {
  name Dot20
  xpos -436
  ypos 370
 }
set N6c6e2c0 [stack 0]
 Diffuse {
  inputs 0
  white 0.29
  name Diffuse1
  xpos 296
  ypos 71
 }
 Input {
  inputs 0
  name Camera
  tile_color 0xff0000ff
  xpos 363
  ypos -732
  number 1
 }
 Dot {
  name Dot5
  xpos 397
  ypos -562
 }
set N60d2020 [stack 0]
 Dot {
  name Dot6
  xpos -47
  ypos -562
 }
 Dot {
  name Dot2
  xpos -47
  ypos 140
 }
 Scene {
  inputs 0
  name LightHub
  xpos 208
  ypos -213
 }
set N6cffaf0 [stack 0]
 Input {
  inputs 0
  name EXR
  xpos 753
  ypos -1596
 }
add_layer {diffuse_color diffuse_color.red diffuse_color.green diffuse_color.blue diffuse_color.alpha}
 Shuffle {
  in diffuse_color
  in2 alpha
  alpha alpha2
  name Shuffle4
  xpos 753
  ypos -1572
  disable {{!parent.use_diffuse_option}}
 }
add_layer {N N.red N.green N.blue N.alpha}
 Multiply {
  channels N
  value 2
  maskChannelMask none
  unpremult rgba.alpha
  name Multiply1
  xpos 753
  ypos -901
  disable {{parent.NoOp1.normal_world_camera_check}}
 }
 Add {
  channels N
  value -1
  maskChannelMask none
  unpremult rgba.alpha
  name Add1
  xpos 753
  ypos -865
  disable {{parent.Multiply1.disable}}
 }
 Dot {
  name Dot1
  xpos 787
  ypos -383
 }
set N6b43f10 [stack 0]
 Dot {
  name Dot34
  xpos 787
  ypos -189
 }
set N72fd630 [stack 0]
 Dot {
  name Dot4
  xpos 593
  ypos -189
 }
set N5f63490 [stack 0]
 Dot {
  name Dot23
  xpos 593
  ypos 140
 }
add_layer {P P.red P.green P.blue P.alpha}
 ReLight {
  inputs 4
  use_alpha true
  normal N
  position P
  name ReLight1
  selected true
  xpos 198
  ypos 137
 }
set N60da3d0 [stack 0]
 Dot {
  name Dot8
  xpos 232
  ypos 207
 }
push $N6b43f10
 Dot {
  name Dot13
  xpos 967
  ypos -383
 }
set N6168190 [stack 0]
 Dot {
  name Dot11
  xpos 1116
  ypos -383
 }
set N72ee7d0 [stack 0]
 Dot {
  name Dot21
  xpos 1260
  ypos -383
 }
 EdgeDetectWrapper {
  channels alpha
  name EdgeDetect1
  xpos 1226
  ypos -357
 }
 Blur {
  size 7
  name Blur1
  xpos 1226
  ypos -321
 }
 Shuffle {
  in alpha
  in2 alpha
  alpha alpha2
  name Shuffle1
  xpos 1226
  ypos -285
 }
 Merge2 {
  inputs 2
  operation mask
  Achannels {rgba.red rgba.green rgba.blue rgba.red}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask none
  name Merge1
  xpos 1227
  ypos 204
 }
push $N72fd630
 Dot {
  name Dot9
  xpos 787
  ypos 281
 }
 Grade {
  multiply 4
  maskChannelMask none
  name Grade1
  xpos 1087
  ypos 278
 }
 Merge2 {
  inputs 2
  operation mask
  Achannels {rgba.red rgba.green rgba.blue rgba.red}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask none
  name Merge2
  xpos 1227
  ypos 278
 }
 Merge2 {
  inputs 2
  operation stencil
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask none
  name Merge7
  xpos 1227
  ypos 367
  disable {{!parent.rimlight_edge_mask_disable}}
 }
 Dot {
  inputs 0
  name Dot16
  xpos 1146
  ypos 442
 }
 Switch {
  inputs 2
  which {{parent.edge_disable}}
  name Switch2
  xpos 1227
  ypos 439
 }
 Dot {
  name Dot10
  xpos 1261
  ypos 486
 }
set N806be50 [stack 0]
 Dot {
  name Dot17
  xpos 1261
  ypos 691
 }
push $N6c6e2c0
 Dot {
  name Dot3
  xpos -436
  ypos 585
 }
push $N806be50
push $N6168190
 Dot {
  name Dot14
  xpos 967
  ypos -229
 }
push $N72ee7d0
 Shuffle {
  in alpha
  in2 alpha
  alpha alpha2
  name Shuffle2
  xpos 1082
  ypos -355
 }
 Dilate {
  maskChannelMask none
  name Dilate1
  xpos 1082
  ypos -320
 }
 Blur {
  size 20
  name Blur2
  xpos 1082
  ypos -284
 }
 Merge2 {
  inputs 2
  operation mask
  maskChannelMask none
  name Merge5
  xpos 1082
  ypos -232
 }
 Dot {
  name Dot12
  xpos 1116
  ypos -72
 }
 Dot {
  inputs 0
  name Dot15
  xpos 955
  ypos -129
 }
 Switch {
  inputs 2
  which {{parent.rimlight_core_disable}}
  name Switch3
  xpos 921
  ypos -75
 }
push $N6b43f10
 Shuffle {
  in diffuse_color
  in2 alpha
  alpha alpha2
  name Shuffle3
  xpos 547
  ypos -410
  postage_stamp true
 }
push $N60d2020
push $N6cffaf0
push $N5f63490
 ReLight {
  inputs 4
  use_alpha true
  normal N
  position P
  name ReLight2
  xpos 363
  ypos -192
 }
add_layer {_sky_Skydome_ind_shd _sky_Skydome_ind_shd.red _sky_Skydome_ind_shd.green _sky_Skydome_ind_shd.blue}
 Merge2 {
  inputs 2
  operation stencil
  Achannels {_sky_Skydome_ind_shd.red _sky_Skydome_ind_shd.green _sky_Skydome_ind_shd.blue rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask none
  name Merge4
  xpos 363
  ypos -75
  disable {{"\[python nuke.toNode('LightHub').inputs()]>0?0:1"}}
 }
 Merge2 {
  inputs 2
  operation plus
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask none
  name Merge3
  xpos 364
  ypos 483
  disable {{"\[python nuke.toNode('LightHub').inputs()]>0?0:1"}}
 }
 Merge2 {
  inputs 2
  operation mask
  maskChannelMask none
  name Merge6
  xpos 364
  ypos 582
  disable {{!parent.mask_enable}}
 }
 Switch {
  inputs 2
  which {{parent.edge_light_only}}
  name edge_only
  xpos 364
  ypos 688
 }
 Output {
  name Output1
  xpos 364
  ypos 904
 }
push $N60da3d0
 Viewer {
  input_process false
  name Viewer1
  xpos 689
  ypos 848
 }
end_group
